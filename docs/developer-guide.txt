================================
Developer's Guide for Setuptools
================================

If you want to know more about contributing on Setuptools, this is the place.


.. contents:: **Table of Contents**


-------------------
Recommended Reading
-------------------

Please read `How to write the perfect pull request
<http://blog.jaraco.com/2014/04/how-to-write-perfect-pull-request.html>`_
for some tips on contributing to open source projects. Although the article
is not authoritative, it was authored by the maintainer of Setuptools, so
reflects his opinions and will improve the likelihood of acceptance and
quality of contribution.

----------------------
Repository and Tracker
----------------------

Setuptools is developed using the DVCS Mercurial.

Grab the code at bitbucket::

    $ hg clone https://bitbucket.org/pypa/setuptools

If you want to contribute changes, we recommend you fork the repository on
bitbucket, commit the changes to your repository, and then make a pull request
on bitbucket. If you make some changes, don't forget to:

- add a note in CHANGES.txt

Please commit bug-fixes against the current maintenance branch and new
features to the default branch.

You can run the tests via::

    $ python setup.py test

.. git mirror

-----------------
Authoring Tickets
-----------------

...

------------------------
Submitting Pull Requests
------------------------

Use Mercurial bookmarks or Git branches. Use incremental commits. Minimize
stylistic changes or at least submit them as separate commits.

-------------------
Semantic Versioning
-------------------

Setuptools follows ``semver`` with some exceptions:

- Uses two-segment version when three segment version ends in zero
- Omits 'v' prefix for tags.

.. explain value of reflecting meaning in versions.
